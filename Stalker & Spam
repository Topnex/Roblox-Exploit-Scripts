
local Players = game.Players:GetChildren()
local Victim = "partycat675"

local Player = game.Players:FindFirstChild(Victim)
local Character = Player.Character
local Humanoid = Character.Humanoid
local HRP = Character.HumanoidRootPart
local Running = false
local Bounce = true
local ActDebounce = false

local LPlayer = game.Players.LocalPlayer
local LCharacter = LPlayer.Character
local LHRP = LCharacter.HumanoidRootPart

local RS = game:GetService("RunService")
local CAS = game:GetService("ContextActionService")

local function Run(Name, Input)
    if Input == Enum.UserInputState.Begin then
        if Running == false then 
            Running = true 
            print(Running) 
        elseif Running == true then 
            Running = false 
            print(Running) 
        end
    end
end

local function Chat(Message, Act)
    if Running and ActDebounce ~= Act and Bounce then
        ActDebounce = Act
        Bounce = false

        local A_2 = "All"
        local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest
        Event:FireServer(Message, A_2)
        wait(1.2)
        Bounce = true
    end 
end


RS.Stepped:Connect(function()
    if Running then
        LHRP.CFrame = (HRP.CFrame + HRP.CFrame.LookVector * 3) * CFrame.Angles(0, math.rad(180), 0)
    end
end)

Humanoid.Climbing:Connect(function(Speed)
    if Speed >= 1 then
        Chat(Victim.." is currently climbing at a speed of "..Speed, "Climbing")
    end
end)
Humanoid.Running:Connect(function(Speed)
    if Speed >= 1 then
        Chat(Victim.." is currently running at a speed of "..Speed, "Running")
    end
end)
Humanoid.Jumping:Connect(function()
    Chat(Victim.." is currently jumping at a jumppower of "..Humanoid.JumpPower, "Jumping")
end)
HRP.Touched:Connect(function(TouchPart)
    Chat(Victim.." is currently touching a part named "..TouchPart.Name.." which is a child of "..TouchPart.Parent.Name, "Touching")
end)
Player.Chatted:Connect(function(Msg)
    Chat("["..Victim.."]: "..Msg, "Chatting")
end)



CAS:BindAction("Run", Run, false, Enum.KeyCode.Q)
while wait(3.5) do ActDebounce = " " end
